<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

    <aop:config>
        <aop:aspect id="LoggingAspect" ref="loggingBean">
            <aop:pointcut id="messageService"
                          expression="execution(* com.mph.*.sendMessage(..))"/>

            <!-- a before advice definition -->
            <aop:before pointcut-ref="messageService" method="beforeAdvice"/>

            <!-- an after advice definition -->
            <aop:after pointcut-ref="messageService" method="afterAdvice"/>

            <!-- an after-returning advice definition -->
            <aop:after-returning pointcut-ref="messageService"
                                 returning="retVal" method="afterReturningAdvice"/>

            <!-- an after-throwing advice definition -->
            <aop:after-throwing pointcut-ref="messageService"
                                throwing="ex" method="afterThrowingAdvice"/>

        </aop:aspect>
    </aop:config>
    <bean id="emailBean" class="com.mph.EmailService" scope="singleton">

    </bean>

    <bean id="tweetBean" class="com.mph.TwitterService" scope="singleton">

    </bean>

    <bean id="loggingBean" class="com.mph.Logging">
    </bean>

</beans>